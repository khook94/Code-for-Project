
import RPi.GPIO as GPIO
from time import sleep
import os
fileTransfer = "/usr/bin/sshpass -p 'access' rsync -e 'ssh -o StrictHostKeyChecking=no' /home/pi/data.txt kyle@52.26.225.187:/var/www/html/"
infile = open('data.txt', 'w')
infile_two = open('/home/pi/Projects/Webio/html/Temperature.txt', 'r')
# read SPI data from MCP3008 chip, 8 possible adc's (0 thru 7)
def readadc(adcnum, clockpin, mosipin, misopin, cspin):
        if ((adcnum > 7) or (adcnum < 0)):
                return -1
        GPIO.output(cspin, True)
 
        GPIO.output(clockpin, False)  # start clock low
        GPIO.output(cspin, False)     # bring CS low
 
        commandout = adcnum
        commandout |= 0x18  # start bit + single-ended bit
        commandout <<= 3    # we only need to send 5 bits here
        for i in range(5):
                if (commandout & 0x80):
                        GPIO.output(mosipin, True)
                else:
                        GPIO.output(mosipin, False)
                commandout <<= 1
                GPIO.output(clockpin, True)
                GPIO.output(clockpin, False)
 
        adcout = 0
        # read in one empty bit, one null bit and 10 ADC bits
        for i in range(12):
                GPIO.output(clockpin, True)
                GPIO.output(clockpin, False)
                adcout <<= 1
                if (GPIO.input(misopin)):
                        adcout |= 0x1
 
        GPIO.output(cspin, True)
        
        adcout >>= 1       # first bit is 'null' so drop it
        return adcout
        
# change these as desired - they're the pins connected from the
# SPI port on the ADC to the Cobbler
SPICLK = 18
SPIMISO = 23
SPIMOSI = 24
SPICS = 25

# set up the SPI interface pins
GPIO.setmode(GPIO.BCM)

GPIO.setup(SPIMOSI, GPIO.OUT)
GPIO.setup(SPIMISO, GPIO.IN)
GPIO.setup(SPICLK, GPIO.OUT)
GPIO.setup(SPICS, GPIO.OUT)
#GPIO.setup(21, GPIO.OUT)
GPIO.setup(17, GPIO.OUT)

# loop on reading ADC value and

#  printing the value

setTemp = int(infile_two.read())
#print type(setTemp)
infile_two.close()

for x in range(1):
        adcValue = readadc(0, SPICLK, SPIMOSI, SPIMISO, SPICS)
        temp = adcValue * .3325
        str_temp = str(temp)
        if temp > setTemp:
                GPIO.output(17, True)
        else:
                GPIO.output(17, False)
        print('The temperature is: {0:.2f} fahrenheit'.format(temp))
        sleep(1)
        infile.write(str_temp + '\n')
infile.close()

print ("Starting to send")
os.system("/usr/bin/sshpass -p 'access' rsync -e 'ssh -o StrictHostKeyChecking=no' /home/pi/data.txt kyle@52.26.225.187:/var/www/html/ | less >> verbose.txt")
print ("transfer complete")





